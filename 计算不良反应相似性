data<-read.csv("adr-gene-drug-pmid.txt",header=F,sep="\t")#读取不良反应-靶点数据#
adr<-as.matrix(unique(data[,1]))#adr总数#
for(i in 1:1)#提取adr对应靶点#
{
  gene1<-data[which(adr[i,1]==data[,1]),2]
  gene1<-unique(gene1)
  a<-matrix(0,length(gene1),2)#adr-gene关系对去重并赋到矩阵#
  a[,1]<-c(rep(adr[i,1],length(gene1)))
  a[,2]<-as.matrix(gene1)
  for(j in i+1:length(adr))#递进循环取adr#
  {
    gene2<-data[which(adr[j,1]==data[,1]),2]
    gene2<-unique(gene2)
    b<-matrix(0,length(gene2),2)
    b[,1]<-c(rep(adr[j,1],length(gene2)))
    b[,2]<-as.matrix(gene2)
    temp<-length(intersect(a[,2],b[,2]))/length(union(a[,2],b[,2]))#不良反应靶点交集除以并集计算相似性#
    score<-matrix(0,1,5)
    score[1,1]<-adr[i,1]
    score[1,2]<-adr[j,1]
    score[1,3]<-intersect(a[,2],b[,2])
    score[1,4]<-union(a[,2],b[,2])
    score[1,5]<-temp
    write.table(score,"score.txt",append=T,quote=F,sep="\t",row.names=F,col.names=F)#得分写出#
  }
}
##########程序优化#############
#自定义函数#
my.function<-function(x,y)
{
  #X不良反应的靶点提取#
  gene1<-data[which(x==data[,1]),2]
  gene1<-unique(gene1)
  a<-matrix(0,length(gene1),2)
  a[,1]<-c(rep(x,length(gene1)))
  a[,2]<-as.matrix(gene1)
  #y不良反应的靶点提取#
  gene2<-data[which(y==data[,1]),2]
  gene2<-unique(gene2)
  b<-matrix(0,length(gene2),2)
  b[,1]<-c(rep(y,length(gene2)))
  b[,2]<-as.matrix(gene2)
  #交集/并集计算相似性#
  temp<-length(intersect(a[,2],b[,2]))/length(union(a[,2],b[,2]))
  score<-matrix(0,1,5)
  score[1,1]<-x
  score[1,2]<-y
  if(length(intersect(a[,2],b[,2]))==0)#判断没有交集补0#
  {
    score[1,3]<-0
  }
  else{
    score[1,3]<-paste(intersect(a[,2],b[,2])[1:length(intersect(a[,2],b[,2]))],collapse=",")#靶点交集字符串合并#
  }
  if(length(union(a[,2],b[,2]))==0)
  {
    score[1,4]<-0
  }
  else{
    score[1,4]<-paste(union(a[,2],b[,2])[1:length(union(a[,2],b[,2]))],collapse=",")
  }
  score[1,5]<-temp
  write.table(score,"score.txt",append=T,quote=F,sep="\t",row.names=F,col.names=F)
}
#提取X,Y不良反应#
data<-read.csv("adr-gene-drug-pmid.txt",header=F,sep="\t")#读取不良反应-靶点数据#
adr<-as.matrix(unique(data[,1]))#adr总数#
for(i in 1:1)
{
  x<-adr[i,1]
  for(j in i+1:length(adr))
  {
    y<-adr[j,1]
    my.function(x,y)
  }
}
####genesymbol转entrezid####利用ChIPpeakAnno包里的convert2EntrezID()
source("https://bioconductor.org/biocLite.R")
biocLite("ChIPpeakAnno")#安装ChIPpeakAnno#
source("https://bioconductor.org/biocLite.R")
biocLite("org.Hs.eg.db")#安装org.Hs.eg.db#
library(ChIPpeakAnno)
library("org.Hs.eg.db")
entrezIDs<-convert2EntrezID(IDs=gene1, orgAnn="org.Hs.eg.db",ID_type="gene_symbol")#genesymbol转entrezid
